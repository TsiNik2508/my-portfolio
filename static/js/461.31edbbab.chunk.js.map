{"version":3,"file":"static/js/461.31edbbab.chunk.js","mappings":"sKAIA,MAAMA,GAAaC,EAAAA,EAAAA,OAAKC,IAAA,IAAC,UAAEC,GAAWD,EAAA,OACpCE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,QAAAE,SACGH,GACCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,qBAE/BC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,aAAe,KAACF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAC,aAAe,QAChGF,EAAAA,EAAAA,KAAA,SAAM,YACMA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeC,SAAC,YAAc,KAACF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,QAAU,KAACF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,oBAAsB,MAC1JF,EAAAA,EAAAA,KAAA,SAAM,KAENA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,iBAAgBC,SAAC,aAAe,cAKpD,IAGFG,EAAcA,KAClB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MAERC,GAAUC,EAAAA,EAAAA,UAAQ,IAAM,CAC5BH,EAAE,uBACFA,EAAE,uBACFA,EAAE,uBACFA,EAAE,uBACFA,EAAE,yBACD,CAACA,KAEGI,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,IACpCK,EAAYC,IAAiBN,EAAAA,EAAAA,WAAS,IACtCO,EAAUC,IAAeR,EAAAA,EAAAA,WAAS,IAClCb,EAAWsB,IAAgBT,EAAAA,EAAAA,WAAS,GAErCU,GAAmBC,EAAAA,EAAAA,cAAY,IAAMF,GAAa,IAAO,IACzDG,GAAmBD,EAAAA,EAAAA,cAAY,IAAMF,GAAa,IAAQ,IAqChE,OAnCAI,EAAAA,EAAAA,YAAU,KACR,IACIC,EADAC,EAAc,IA+BlB,OA3BMR,EACFO,EAAUE,YAAW,IAAMR,GAAY,IAAQ,KACtCH,GACTU,EAAc,GACVZ,EAAY,EACdW,EAAUE,YAAW,KACnBjB,EAAiBH,EAAQK,GAAagB,MAAM,EAAGd,EAAY,IAC3DC,EAAaD,EAAY,EAAE,GAC1BY,IAEHT,GAAc,GACdJ,GAAgBgB,IAAUA,EAAO,GAAKtB,EAAQuB,WAG5ChB,EAAYP,EAAQK,GAAakB,OACnCL,EAAUE,YAAW,KACnBjB,EAAiBH,EAAQK,GAAagB,MAAM,EAAGd,EAAY,IAC3DC,EAAaD,EAAY,EAAE,GAC1BY,IAEHP,GAAY,GACZF,GAAc,IAMb,IAAMc,aAAaN,EAAQ,GACjC,CAACX,EAAWE,EAAYE,EAAUN,EAAaL,KAGhDL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,yBAAwBC,SAAA,CACnCI,EAAE,wBAAwB,KAACN,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAC,WAEpEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,qBAAoBC,SAAA,CAC/BI,EAAE,qBAAqB,KAACN,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAEI,EAAE,0BAE1DH,EAAAA,EAAAA,MAAA,MAAIF,UAAU,qBAAoBC,SAAA,CAC/BQ,GACDV,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SAAC,aAG3CC,EAAAA,EAAAA,MAAA,OACEF,UAAU,qBACVgC,aAAcX,EACdY,aAAcV,EAAiBtB,SAAA,EAE/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAChBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,sBAEjCF,EAAAA,EAAAA,KAACJ,EAAU,CAACG,UAAWA,SAErB,EAIV,GAAeF,EAAAA,EAAAA,MAAKQ,E","sources":["components/HeroSection/HeroSection.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, memo, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './HeroSection.scss';\r\n\r\nconst CodeWindow = memo(({ isHovered }) => (\r\n  <div className=\"hero-section__code-window\">\r\n    <pre>\r\n      <code>\r\n        {isHovered ? (\r\n          <span className=\"code__string\">\"Hello, World!\"</span>\r\n        ) : (\r\n          <>\r\n            <span className=\"code__keyword\">function</span> <span className=\"code__function\">sayHello</span>() &#123;\r\n            <br />\r\n            &nbsp;&nbsp;<span className=\"code__keyword\">console</span>.<span className=\"code__method\">log</span>(<span className=\"code__string\">\"Hello, World!\"</span>);\r\n            <br />\r\n            &#125;\r\n            <br />\r\n            <span className=\"code__function\">sayHello</span>();\r\n          </>\r\n        )}\r\n      </code>\r\n    </pre>\r\n  </div>\r\n));\r\n\r\nconst HeroSection = () => {\r\n  const { t } = useTranslation();\r\n  \r\n  const phrases = useMemo(() => [\r\n    t('heroSection.phrase1'),\r\n    t('heroSection.phrase2'),\r\n    t('heroSection.phrase3'),\r\n    t('heroSection.phrase4'),\r\n    t('heroSection.phrase5')\r\n  ], [t]);\r\n\r\n  const [displayedText, setDisplayedText] = useState('');\r\n  const [phraseIndex, setPhraseIndex] = useState(0);\r\n  const [charIndex, setCharIndex] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const handleMouseEnter = useCallback(() => setIsHovered(true), []);\r\n  const handleMouseLeave = useCallback(() => setIsHovered(false), []);\r\n\r\n  useEffect(() => {\r\n    let typingSpeed = 100;\r\n    let timeout;\r\n\r\n    const updateText = () => {\r\n      if (isPaused) {\r\n        timeout = setTimeout(() => setIsPaused(false), 2000);\r\n      } else if (isDeleting) {\r\n        typingSpeed = 50;\r\n        if (charIndex > 0) {\r\n          timeout = setTimeout(() => {\r\n            setDisplayedText(phrases[phraseIndex].slice(0, charIndex - 1));\r\n            setCharIndex(charIndex - 1);\r\n          }, typingSpeed);\r\n        } else {\r\n          setIsDeleting(false);\r\n          setPhraseIndex((prev) => (prev + 1) % phrases.length);\r\n        }\r\n      } else {\r\n        if (charIndex < phrases[phraseIndex].length) {\r\n          timeout = setTimeout(() => {\r\n            setDisplayedText(phrases[phraseIndex].slice(0, charIndex + 1));\r\n            setCharIndex(charIndex + 1);\r\n          }, typingSpeed);\r\n        } else {\r\n          setIsPaused(true);\r\n          setIsDeleting(true);\r\n        }\r\n      }\r\n    };\r\n\r\n    updateText();\r\n    return () => clearTimeout(timeout);\r\n  }, [charIndex, isDeleting, isPaused, phraseIndex, phrases]);\r\n\r\n  return (\r\n    <div className=\"hero-section\">\r\n      <div className=\"hero-section__text\">\r\n        <h1 className=\"hero-section__greeting\">\r\n          {t('heroSection.greeting')} <span className=\"hero-section__smile\">:)</span>\r\n        </h1>\r\n        <h2 className=\"hero-section__name\">\r\n          {t('heroSection.intro')} <span className=\"highlight\">{t('heroSection.name')}</span>\r\n        </h2>\r\n        <h3 className=\"hero-section__role\">\r\n          {displayedText}\r\n          <span className=\"hero-section__cursor\">|</span>\r\n        </h3>\r\n      </div>\r\n      <div \r\n        className=\"hero-section__code\"\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <div className=\"hero-section__code-header\">\r\n          <span className=\"header-btn close\"></span>\r\n          <span className=\"header-btn minimize\"></span>\r\n          <span className=\"header-btn expand\"></span>\r\n          <span className=\"header-title\">HelloWorld.js</span>\r\n        </div>\r\n        <CodeWindow isHovered={isHovered} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(HeroSection);\r\n"],"names":["CodeWindow","memo","_ref","isHovered","_jsx","className","children","_jsxs","_Fragment","HeroSection","t","useTranslation","phrases","useMemo","displayedText","setDisplayedText","useState","phraseIndex","setPhraseIndex","charIndex","setCharIndex","isDeleting","setIsDeleting","isPaused","setIsPaused","setIsHovered","handleMouseEnter","useCallback","handleMouseLeave","useEffect","timeout","typingSpeed","setTimeout","slice","prev","length","clearTimeout","onMouseEnter","onMouseLeave"],"sourceRoot":""}